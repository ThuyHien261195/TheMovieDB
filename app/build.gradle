apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.taidang.themoviedb"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}

def getApiKey() {
    Properties props = new Properties()
    props.load(project.rootProject.file('local.properties').newDataInputStream())
    def apiKey = props.getProperty("tmdb_api_key")
    if (apiKey == null || apiKey.isEmpty()) {
        println("NO TMDB API KEY PROVIDED !!!")
    }
    return apiKey
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlinVersion"
    implementation "org.jetbrains.anko:anko-commons:$rootProject.ankoVersion"
    implementation "org.jetbrains.anko:anko-support-v4:$rootProject.ankoVersion"
    implementation "androidx.core:core-ktx:${rootProject.androidKTXVersion}"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.rxKotlinVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.rxAndroidVersion}"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okhttpLoggingVersion}"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.github.bumptech.glide:glide:${rootProject.glideVersion}"

    // testing dependencies
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
}
